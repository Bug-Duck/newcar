import{Widget as n}from"@newcar/core";import{Color as o}from"@newcar/utils";var r=Object.defineProperty,d=(h,i,s)=>i in h?r(h,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):h[i]=s,e=(h,i,s)=>(d(h,typeof i!="symbol"?i+"":i,s),s);class l extends n{constructor(i,s,t){t??(t={}),super(t),this.fn=i,this.domain=s,e(this,"path"),e(this,"paint"),e(this,"range"),e(this,"lineWidth"),e(this,"divisionX"),e(this,"divisionY"),this.range=t.range??[-1/0,1/0],this.divisionX=t.divisionX??50,this.divisionY=t.divisionY??50,t.style??(t.style={}),this.style.width=t.style.width??2,this.style.color=t.style.color??o.WHITE}init(i){this.paint=new i.Paint,this.paint.setColor(this.style.color.toFloat4()),this.paint.setStyle(i.PaintStyle.Stroke),this.paint.setStrokeWidth(this.style.width/this.divisionX*2),this.path=new i.Path,this.path.moveTo(this.domain[0],this.fn(this.domain[0]));for(let s=this.domain[0];s<=this.domain[0]+(this.domain[1]-this.domain[0])*this.progress;s+=1/this.divisionX){const t=this.fn(s);this.path.lineTo(s,t)}}predraw(i,s){switch(s){case"fn":case"divisionX":case"divisionY":case"lineWidth":case"range":case"domain":{console.log(this.domain),this.path.reset(),this.path.moveTo(this.domain[0],this.fn(this.domain[0]));for(let t=this.domain[0];t<=this.domain[0]+(this.domain[1]-this.domain[0])*this.progress;t+=1/this.divisionX){const a=this.fn(t);this.path.lineTo(t,a)}break}case"style.width":{this.paint.setStrokeWidth(this.style.width/this.divisionX*2);break}case"style.color":{this.paint.setColor(this.style.color.toFloat4());break}}}draw(i){i.scale(this.divisionX,this.divisionY),i.drawPath(this.path,this.paint)}}export{l as MathFunction};
//# sourceMappingURL=index.mjs.map
